//
// Autogenerated by Thrift Compiler (0.9.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var Thrift = require('thrift').Thrift;
var ttypes = module.exports = {};
Recommendation = module.exports.Recommendation = function(args) {
  this.itemId = null;
  this.prefValue = null;
  if (args) {
    if (args.itemId !== undefined) {
      this.itemId = args.itemId;
    }
    if (args.prefValue !== undefined) {
      this.prefValue = args.prefValue;
    }
  }
};
Recommendation.prototype = {};
Recommendation.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.itemId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.DOUBLE) {
        this.prefValue = input.readDouble();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Recommendation.prototype.write = function(output) {
  output.writeStructBegin('Recommendation');
  if (this.itemId !== null && this.itemId !== undefined) {
    output.writeFieldBegin('itemId', Thrift.Type.STRING, 1);
    output.writeString(this.itemId);
    output.writeFieldEnd();
  }
  if (this.prefValue !== null && this.prefValue !== undefined) {
    output.writeFieldBegin('prefValue', Thrift.Type.DOUBLE, 2);
    output.writeDouble(this.prefValue);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

UserRecommendations = module.exports.UserRecommendations = function(args) {
  this.userCode = null;
  this.recommendations = null;
  if (args) {
    if (args.userCode !== undefined) {
      this.userCode = args.userCode;
    }
    if (args.recommendations !== undefined) {
      this.recommendations = args.recommendations;
    }
  }
};
UserRecommendations.prototype = {};
UserRecommendations.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.userCode = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.recommendations = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = new ttypes.Recommendation();
          elem6.read(input);
          this.recommendations.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UserRecommendations.prototype.write = function(output) {
  output.writeStructBegin('UserRecommendations');
  if (this.userCode !== null && this.userCode !== undefined) {
    output.writeFieldBegin('userCode', Thrift.Type.STRING, 1);
    output.writeString(this.userCode);
    output.writeFieldEnd();
  }
  if (this.recommendations !== null && this.recommendations !== undefined) {
    output.writeFieldBegin('recommendations', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.recommendations.length);
    for (var iter7 in this.recommendations)
    {
      if (this.recommendations.hasOwnProperty(iter7))
      {
        iter7 = this.recommendations[iter7];
        iter7.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ttypes.VERSION = '1.0.0';
